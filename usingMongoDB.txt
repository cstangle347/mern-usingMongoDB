Create a database called 'my_first_db'.
> use {my_first_db}
switched to db {my_first_db}

Create students collection.
> db.createCollection('students')
{ "ok" : 1 }

Create 5 students with the appropriate info.
> db.students.insert({name: "Mark", home_state: "Texas", lucky_number: 7, birthday: {month: 6, day: 19, year: 1989}})
>  db.students.insert({name: "Vanessa", home_state: "Texas", lucky_number: 18, birthday: {month: 5, day: 18, year: 1986}})
>  db.students.insert({name: "Frank", home_state: "Illinois", lucky_number: 9, birthday: {month: 12, day: 22, year: 1995}})
>  db.students.insert({name: "Chris", home_state: "Texas", lucky_number: 8, birthday: {month: 7, day: 17, year: 1993}})
>  db.students.insert({name: "Kyle", home_state: "Washington", lucky_number: 4, birthday: {month: 11, day: 2, year: 1992}})

Get all students.
> db.students.find().pretty()
{
	"_id" : ObjectId("5ec2cd942b27671c75d02bf4"),
	"name" : "Mark",
	"home_state" : "Texas",
	"lucky_number" : 7,
	"birthday" : {
		"month" : 6,
		"day" : 19,
		"year" : 1989
	}
}
{
	"_id" : ObjectId("5ec2cdd62b27671c75d02bf5"),
	"name" : "Vanessa",
	"home_state" : "Texas",
	"lucky_number" : 18,
	"birthday" : {
		"month" : 5,
		"day" : 18,
		"year" : 1986
	}
}
{
	"_id" : ObjectId("5ec2ce192b27671c75d02bf6"),
	"name" : "Frank",
	"home_state" : "Illinois",
	"lucky_number" : 9,
	"birthday" : {
		"month" : 12,
		"day" : 22,
		"year" : 1995
	}
}
{
	"_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"),
	"name" : "Chris",
	"home_state" : "Texas",
	"lucky_number" : 8,
	"birthday" : {
		"month" : 7,
		"day" : 17,
		"year" : 1993
	}
}
{
	"_id" : ObjectId("5ec2ceb02b27671c75d02bf8"),
	"name" : "Kyle",
	"home_state" : "Washington",
	"lucky_number" : 4,
	"birthday" : {
		"month" : 11,
		"day" : 2,
		"year" : 1992
	}
}

Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
> db.students.find({home_state: "Washington"})
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 } }


Get all students whose lucky number is greater than 3
> db.students.find({lucky_number: {$gt: 3}})
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 } }
{ "_id" : ObjectId("5ec2cdd62b27671c75d02bf5"), "name" : "Vanessa", "home_state" : "Texas", "lucky_number" : 18, "birthday" : { "month" : 5, "day" : 18, "year" : 1986 } }
{ "_id" : ObjectId("5ec2ce192b27671c75d02bf6"), "name" : "Frank", "home_state" : "Illinois", "lucky_number" : 9, "birthday" : { "month" : 12, "day" : 22, "year" : 1995 } }
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 } }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 } }

Get all students whose lucky number is less than or equal to 10
> db.students.find({lucky_number: {$lte: 10}})
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 } }
{ "_id" : ObjectId("5ec2ce192b27671c75d02bf6"), "name" : "Frank", "home_state" : "Illinois", "lucky_number" : 9, "birthday" : { "month" : 12, "day" : 22, "year" : 1995 } }
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 } }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 } }

Get all students whose lucky number is between 1 and 9 (inclusive)
> db.students.find({$and:[{lucky_number:{$lte:9}}, {lucky_number:{$gte:1}}]})
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 } }
{ "_id" : ObjectId("5ec2ce192b27671c75d02bf6"), "name" : "Frank", "home_state" : "Illinois", "lucky_number" : 9, "birthday" : { "month" : 12, "day" : 22, "year" : 1995 } }
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 } }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 } }

Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
> db.students.update({},{$set: {"interests":['coding', 'brunch', 'MongoDB']}},{multi:true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })
> db.students.find()
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("5ec2cdd62b27671c75d02bf5"), "name" : "Vanessa", "home_state" : "Texas", "lucky_number" : 18, "birthday" : { "month" : 5, "day" : 18, "year" : 1986 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("5ec2ce192b27671c75d02bf6"), "name" : "Frank", "home_state" : "Illinois", "lucky_number" : 9, "birthday" : { "month" : 12, "day" : 22, "year" : 1995 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB" ] }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB" ] }



Add some unique interests for each particular student into each of their interest arrays.
> db.students.update({name: "Chris"},{$push: {interests:{$each:['soccer', 'hockey']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Kyle"},{$push: {interests:{$each:['gym', 'beach']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Frank"},{$push: {interests:{$each:['gym', 'sleeping']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Mark"},{$push: {interests:{$each:['crafting', 'woodworking']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Vanessa"},{$push: {interests:{$each:['soccer', 'shopping']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

Add the interest 'taxes' into someone's interest array.
> db.students.update({name: "Mark"},{$push: {interests:{$each:['taxes']}}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find({name: "Mark"})
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB", "crafting", "woodworking", "taxes" ] }

Remove the 'taxes' interest you just added.
> db.students.update({name : "Mark"}, {$pull: {interests: "taxes"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find({name: "Mark"})
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB", "crafting", "woodworking" ] }

Remove all students who are from California. (Illinois)
> db.students.remove({home_state:"Illinois"})
WriteResult({ "nRemoved" : 1 })
> db.students.find()
{ "_id" : ObjectId("5ec2cd942b27671c75d02bf4"), "name" : "Mark", "home_state" : "Texas", "lucky_number" : 7, "birthday" : { "month" : 6, "day" : 19, "year" : 1989 }, "interests" : [ "coding", "brunch", "MongoDB", "crafting", "woodworking" ] }
{ "_id" : ObjectId("5ec2cdd62b27671c75d02bf5"), "name" : "Vanessa", "home_state" : "Texas", "lucky_number" : 18, "birthday" : { "month" : 5, "day" : 18, "year" : 1986 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "shopping" ] }
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ] }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ] }

Remove a student by name.
> db.students.remove({name:"Mark"})
WriteResult({ "nRemoved" : 1 })
> db.students.find()
{ "_id" : ObjectId("5ec2cdd62b27671c75d02bf5"), "name" : "Vanessa", "home_state" : "Texas", "lucky_number" : 18, "birthday" : { "month" : 5, "day" : 18, "year" : 1986 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "shopping" ] }
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ] }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ] }

Remove a student whose lucky number is greater than 5 (JUST ONE)
> db.students.remove({lucky_number: {$gt:5}}, {justOne:true})
WriteResult({ "nRemoved" : 1 })
> db.students.find()
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ] }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ] }

Add a field to each student collection called 'number_of_belts' and set it to 0.
> db.students.update({},{$set: {"number_of_belts":0}},{multi:true})
WriteResult({ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 })

Increment this field by 1 for all students in Washington (Seattle Dojo).
> db.students.update({home_state: "Washington"},{$inc: {number_of_belts: 1}},{multi:true})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({}, {$rename: {"number_of_belts":"belts_earned"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.find()
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ], "belts_earned" : 0 }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ], "number_of_belts" : 1 }

Rename the 'number_of_belts' field to 'belts_earned'
> db.students.updateMany({}, {$rename: {"number_of_belts":"belts_earned"}})
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 1 }
> db.students.find()
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "lucky_number" : 8, "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ], "belts_earned" : 0 }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ], "belts_earned" : 1 }

Remove the 'lucky_number' field.
> db.students.update({}, {$unset:{lucky_number:""}},{multi:true})
WriteResult({ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 })
> db.students.find()
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ], "belts_earned" : 0 }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ], "belts_earned" : 1 }

Add a 'updated_on' field, and set the value as the current date.
> db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})
WriteResult({ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 })
> db.students.find()
{ "_id" : ObjectId("5ec2ce6b2b27671c75d02bf7"), "name" : "Chris", "home_state" : "Texas", "birthday" : { "month" : 7, "day" : 17, "year" : 1993 }, "interests" : [ "coding", "brunch", "MongoDB", "soccer", "hockey" ], "belts_earned" : 0, "updated_on" : ISODate("2020-05-18T19:17:10.292Z") }
{ "_id" : ObjectId("5ec2ceb02b27671c75d02bf8"), "name" : "Kyle", "home_state" : "Washington", "birthday" : { "month" : 11, "day" : 2, "year" : 1992 }, "interests" : [ "coding", "brunch", "MongoDB", "gym", "beach" ], "belts_earned" : 1, "updated_on" : ISODate("2020-05-18T19:17:10.292Z") }